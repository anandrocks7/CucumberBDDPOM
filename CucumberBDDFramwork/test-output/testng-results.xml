<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="CucumberTestNg" duration-ms="42075" started-at="2020-06-11T08:49:13Z" finished-at="2020-06-11T08:49:56Z">
    <groups>
      <group name="cucumber">
        <method signature="TestRunnerSmoke.feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunnerSmoke@cb644e]" name="feature" class="runner.TestRunnerSmoke"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Testcases cucumberTestNg" duration-ms="42075" started-at="2020-06-11T08:49:13Z" finished-at="2020-06-11T08:49:56Z">
      <class name="runner.TestRunnerSmoke">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.TestRunnerSmoke@cb644e]" name="setUpClass" is-config="true" duration-ms="400" started-at="2020-06-11T08:49:14Z" finished-at="2020-06-11T08:49:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunnerSmoke@cb644e]" name="feature" duration-ms="41118" started-at="2020-06-11T08:49:14Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2020-06-11T08:49:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[TestScenariosA  feature]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="FAIL" signature="feature(cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestRunnerSmoke@cb644e]" name="feature" duration-ms="20" started-at="2020-06-11T08:49:14Z" description="Runs Cucumber Feature" data-provider="features" finished-at="2020-06-11T08:49:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[CRM Login feature]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[Only one formatter can use STDOUT, now both pretty and pretty use it. If you use more than one formatter you must specify output path with PLUGIN:PATH_OR_URL]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: Only one formatter can use STDOUT, now both pretty and pretty use it. If you use more than one formatter you must specify output path with PLUGIN:PATH_OR_URL
at cucumber.runtime.formatter.PluginFactory.defaultOutOrFailIfAlreadyUsed(PluginFactory.java:185)
at cucumber.runtime.formatter.PluginFactory.convertOrNull(PluginFactory.java:144)
at cucumber.runtime.formatter.PluginFactory.instantiate(PluginFactory.java:99)
at cucumber.runtime.formatter.PluginFactory.create(PluginFactory.java:87)
at cucumber.runtime.RuntimeOptions.getPlugins(RuntimeOptions.java:245)
at cucumber.runtime.RuntimeOptions$1.invoke(RuntimeOptions.java:291)
at com.sun.proxy.$Proxy17.uri(Unknown Source)
at cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:160)
at cucumber.api.testng.TestNGCucumberRunner.runCucumber(TestNGCucumberRunner.java:63)
at runner.TestRunnerSmoke.feature(TestRunnerSmoke.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:71)
at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- feature -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.TestRunnerSmoke@cb644e]" name="tearDownClass" is-config="true" duration-ms="51" started-at="2020-06-11T08:49:55Z" finished-at="2020-06-11T08:49:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.TestRunnerSmoke -->
    </test> <!-- Testcases cucumberTestNg -->
  </suite> <!-- CucumberTestNg -->
</testng-results>
